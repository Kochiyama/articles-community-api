generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  uuid          String        @id @default(uuid())
  name          String
  email         String        @unique
  birthday      DateTime      @db.Timestamptz
  bio           String
  country       String
  password_hash String
  articles      Article[]
  comments      Comment[]
  comment_likes CommentLike[]
  article_likes ArticleLike[]
}

model Article {
  uuid             String        @id @default(uuid())
  title            String
  description      String
  content          String
  publication_date DateTime      @db.Timestamptz
  author           User          @relation(fields: [author_uuid], references: [uuid], onDelete: Cascade)
  author_uuid      String
  likes            ArticleLike[]
  comments         Comment[]
}

model Comment {
  uuid         String        @id @default(uuid())
  article      Article       @relation(fields: [article_uuid], references: [uuid], onDelete: Cascade)
  article_uuid String
  user         User          @relation(fields: [user_uuid], references: [uuid], onDelete: Cascade)
  user_uuid    String
  comment      String
  likes        CommentLike[]
  date         DateTime      @db.Timestamptz
}

model ArticleLike {
  uuid         String  @id @default(uuid())
  user         User    @relation(fields: [user_uuid], references: [uuid], onDelete: Cascade)
  user_uuid    String
  article      Article @relation(fields: [article_uuid], references: [uuid], onDelete: Cascade)
  article_uuid String
}

model CommentLike {
  uuid         String  @id @default(uuid())
  user         User    @relation(fields: [user_uuid], references: [uuid], onDelete: Cascade)
  user_uuid    String
  comment      Comment @relation(fields: [comment_uuid], references: [uuid], onDelete: Cascade)
  comment_uuid String
}
